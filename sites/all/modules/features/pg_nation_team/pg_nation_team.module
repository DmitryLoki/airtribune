<?php
/**
 * @file
 * Code for the Paragliding Nation Team feature.
 */

include_once 'pg_nation_team.features.inc';

/**
 * Implements hook_views_api().
 */
function pg_nation_team_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'pg_nation_team') . '/views',
  );
}

/**
 * Implements hook_field_extra_fields()
 */
function pg_nation_team_field_extra_fields() {

  $extra[AIRTRIBUNE_TEAM_TYPE][AIRTRIBUNE_PG_NATION_TEAM_TYPE] = array(
    'form' => array(
      'pg_nation_team_pilots_count' => array(
        'label' => t('Pilots'),
        'description' => t('Pilots count'),
        'weight' => -5,
      ),
    ),
    'display' => array(
      'pg_nation_team_pilots_count' => array(
        'label' => t('Pilots'),
        'description' => t('Pilots count'),
        'weight' => -5,
        'callback' => 'pg_nation_team_pilots_count_callback',
      ),
    ),
  );

  return $extra;
}

/*
 * Callback for pilots count extrafield
 * @see #4339
 * @author Vyacheslav Malchik <info@vkey.biz>
 */
function pg_nation_team_pilots_count_callback($entity) {
  $output = FALSE;
  $entity_type = $entity->entityType();
  $wrapper = entity_metadata_wrapper($entity_type, $entity);

  $field = field_info_field(AIRTRIBUNE_TEAM_MEMBER_FIELD);
  $instance = field_info_instance($entity_type, AIRTRIBUNE_TEAM_MEMBER_FIELD, $entity->type);

  $count_all_team_contestants = count(entityreference_options_list($field, $instance, $entity_type, $entity));
  $count_selected_team_contestants = count($wrapper->{AIRTRIBUNE_TEAM_MEMBER_FIELD}->value());

  $output = $count_all_team_contestants . '/' . $count_selected_team_contestants;

  return $output;
}

/*
 * Approve team leader form
 * @see views_handler_field_approve_team_leader class
 */
function pg_nation_team_approve_team_leader_form($form, &$form_state, $options) {

  $attributes = array('data-country' => array($options['team_country']));

  if ($options['value'] == $options['team_entity']->uid) {
    $attributes['checked'] = array('checked');
  }

  $form['approve_team_leader'] = array(
    '#type' => 'checkbox',
    '#return_value' => $options['value'],
    '#attributes' => $attributes,
    '#ajax' => array(
      'callback' => 'approve_team_leader_ajax_callback',
      'wrapper' => 'approve-team-leader-' . $options['row_index'],
    ),
    '#prefix' => '<div id="approve-team-leader-' . $options['row_index'] . '" class="approve-team ' . $options['team_country'] . '">',
    '#suffix' => '</div>',
  );

  $form['team_entity'] = array('#type' => 'value', '#value' => $options['team_entity']);

  $form['#attached']['js'][] = drupal_get_path('module', 'pg_nation_team') . '/js/pg_nation_team.js';
  return $form;
}

/*
 * Ajax callback for approve team leader checkbox
 * @see views_handler_field_approve_team_leader class
 */
function approve_team_leader_ajax_callback($form, &$form_state) {
  $team_leader_uid = $form_state['complete form']['approve_team_leader']['#value'];
  $team_leader_set = $form_state['complete form']['approve_team_leader']['#checked'];
  $team_country = $form_state['complete form']['approve_team_leader']['#attributes']['data-country'][0];
  $team_entity = $form_state['complete form']['team_entity']['#value'];
  if (!$team_leader_set) {
    // Set uid=1 as default empty value
    // @todo use another value by default
    $team_leader_uid = 1;
  }
  $wrapper = entity_metadata_wrapper($team_entity->entityType(), $team_entity);
  $wrapper->uid->set($team_leader_uid);
  $wrapper->save();
}

/**
 * Pilot selection form
 * @see views_handler_field_pilot_selection class
 */
function pg_nation_team_pilot_selection_form($form, &$form_state, $options) {
  // If user checked, then views return loaded team entity.
  if (isset($options['ent_team'])) {
    $attributes['checked'] = array('checked');
  }
  else {
    $query = new EntityFieldQuery();
    $result = $query->entityCondition('entity_type', AIRTRIBUNE_TEAM_TYPE)
      ->entityCondition('bundle', 'pg_nation_team')
      ->fieldCondition('og_group_ref', 'target_id', $options['contest_nid'], '=')
      ->fieldCondition('field_country', 'iso2', $options['user_country'], '=')
      ->execute();
    $eid = array_pop($result[AIRTRIBUNE_TEAM_TYPE]);
    $options['ent_team'] = entity_load_single(AIRTRIBUNE_TEAM_TYPE, $eid->id);
  }

  $form['pilot_selection'] = array(
    '#type' => 'checkbox',
    '#return_value' => $options['value'],
    '#attributes' => $attributes,
    '#ajax' => array(
      'callback' => 'team_pilot_selection_callback',
      'wrapper' => 'team-pilot-selection-' . $options['row_index'],
    ),
    '#value' => $options['uid'],
    '#prefix' => '<div id="select-pilot-' . $options['uid'] . '" class="select-pilot">',
    '#suffix' => '</div>',
  );

  $form['ent_team'] = array('#type' => 'value', '#value' => $options['ent_team']);
//  $form['contest_nid'] = array('#type' => 'value', '#value' => $options['contest_nid']);

  $form['#attached']['js'][] = drupal_get_path('module', 'pg_nation_team') . '/js/pg_nation_team.js';
  return $form;
}

/**
 * Ajax callback for pilot selection checkbox
 * @see views_handler_field_pilot_selection class
 */
function team_pilot_selection_callback($form, &$form_state) {
  $pilot_uid = $form_state['complete form']['pilot_selection']['#value'];
  $pilot_checked = $form_state['complete form']['pilot_selection']['#checked'];
  $ent_team = $form_state['complete form']['ent_team']['#value'];

  $wrapper = entity_metadata_wrapper($ent_team->entityType(), $ent_team);
  $selected_pilots = $wrapper->field_team_member->value();
  $user = user_load($pilot_uid);
  // User checked - add to selected pilots.
  //~$pilot_checked=true;
  if ($pilot_checked) {
    $selected_pilots[] = $user;
  }
  // User unchecked, remove from selected pilots.
  else {
    foreach ($selected_pilots as $k => $v) {
      if ($v->uid == $user->uid) {
        unset($selected_pilots[$k]);
      }
    }
  }
  $wrapper->field_team_member->set($selected_pilots);
  $wrapper->save();
}