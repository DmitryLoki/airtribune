<?php
/**
 * @file
 * Code for the Dayblog feature.
 */

include_once 'dayblog.features.inc';

/**
 * Implementation of hook_form
 * Default base is 'node_content'
 * @param type $node
 * @param type $form_state
 */
function dayblog_form($node, $form_state) {
  //Default base is 'node_content'
  //Title field is not attached otherwise
  $form = node_content_form($node, $form_state);
  return $form;
}

/**
 * Implements hook_view().
 */
function dayblog_view($node) {
  $record = db_query('SELECT entity_id FROM {field_data_field_dayblog_ref} WHERE field_dayblog_ref_target_id = ?', array($node->nid));
  if ($day_id = $record->fetchField()) {
    // Time zone field doesn't support Entity API.
    // See http://drupal.org/node/1824306.
    $wrapper = entity_metadata_wrapper('node', $day_id);
    $time_zone = $wrapper->og_group_ref[0]->value()->field_time_zone[LANGUAGE_NONE][0]['value'];

    $date = new DateTime(null, new DateTimeZone($time_zone));
    $timestamp =  $node->created + $date->getOffset();
    $node->content['time'] = array(
      '#markup' => format_date($timestamp, 'custom', 'H:i'),
    );
  }
  return $node;
}

/**
 * Implements hook_views_pre_render().
 * 
 * Change dayblog rendered time according to event timezone.
 */
function dayblog_views_pre_render(&$view) {
  static $offset = NULL;
  
  if ($view->name == AIRTRIBUNE_DAY_BLOG_VIEW && !empty($view->args[0])) {
    if (!isset($offset)) {
      $nid = $view->args[0];
      
      // Get og_membership entities for the referencing day
      $query = new EntityFieldQuery();
      $result = $query
        ->entityCondition('entity_type', 'og_membership')
        ->propertyCondition('entity_type', 'node', '=')
        ->propertyCondition('group_type', 'node', '=')
        ->propertyCondition('etid', $nid, '=')
        ->execute();
      
      // Get day event offset
      if (!empty($result['og_membership'])) {
        $og_membership_ids = array_keys($result['og_membership']);
        $entities = entity_load('og_membership', $og_membership_ids);
        $entity = array_shift($entities);
        // Get event nid
        $gid = $entity->gid;
        // Load event node
        $node = node_load($gid);
        // Get offset
        $event_time = airtribune_extract_time_from_event($node);
        if (!isset($event_time['offset'])) {
          return;
        }
        // Set static offset
        $offset = $event_time['offset'];
      }
    }
    
    if (!empty($view->result)) {
      foreach ($view->result as $k => $v) {
        $view->result[$k]->node_created += $offset;
      }
    }
  }
}
