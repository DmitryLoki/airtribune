<?php

// TODO
// hook_theme() field_view_field() field_get_items()
function pinba_start_init() {
  // We need distinguish drupal pages, to get pinba statistics.
  // Change name of script from 'index.php' to requested $q variable
  // @see #3283
  if (extension_loaded('pinba') && function_exists('pinba_script_name_set')) {
    $request = $_SERVER['REQUEST_URI'];
    // temp code, remove after moving files directory to /files
    if (strpos($request, '/sites/default/files') !== FALSE) {
      $request = substr($request, 15);
    }
    pinba_script_name_set($request);
    define('PINBA', 1);
    global $pinba_timers;
    $pinba_timers = array();
  }
}

function pinba_start_entity_load($entity_type, $ids = FALSE, $conditions = array(), $reset = FALSE) {
  if (!extension_loaded('pinba')) return;
  global $pinba_timers;
  foreach ($entity_type as $key => $entity) {
    $type_name = !empty($entity->type) ? $entity->type : $ids;
    $timer = pinba_timer_start(array(
      "entity_load" => "entity_load__" . $type_name . "_"  . $key
    ));
    $pinba_timers[$type_name . $key] = $timer;
  }
}

function pinba_start_entity_view($entity, $type, $view_mode, $langcode) {
  if (!extension_loaded('pinba')) return;

  global $pinba_timers;

    $timer = pinba_timer_start(array(
      "entity_view" => "entity_view__" . $type . "_"  . $entity->nid
    ));
    $pinba_timers[$type . $entity->nid] = $timer;
}

function pinba_start_cron() {
  if (!PINBA) return;

  $timer = pinba_timer_start(array(
    "cron" => "cron__" . REQUEST_TIME
  ));
  $pinba_timers['cron'] = $timer;
}