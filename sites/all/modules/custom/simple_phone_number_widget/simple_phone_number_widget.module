<?php

/**
 * @file
 * Implements Simple Phone Widget for CCK Phone
 */

/**
 * Implements hook_field_widget_info().
 */
function simple_phone_number_widget_field_widget_info() {
  $widgets = array();
  $widgets['simple_phone_number_widget'] = array(
    'label' => 'Simple phone number',
    'description' => 'Simple Phone Number Widget for CCK Phone field',
    'field types' => array('phone_number'),
  );
  return $widgets;
}

/**
 * Implements hook_field_widget_form().
 */
function simple_phone_number_widget_field_widget_form(&$form, &$form_state, $field, $instance,
  $langcode, $items, $delta, $base
) {
  $element = $base;

  $widget = $instance['widget'];
  $settings = $widget['settings'];

  $element['input_format'] = array(
    '#type' => 'value',
    '#value' => "",
  );

  switch ($widget['type']) {
    case 'simple_phone_number_widget':
      drupal_add_js(drupal_get_path('module', 'simple_phone_number_widget') . '/simple_phone_number_widget.js');
      $number = (isset($items[$delta])) ? $items[$delta]['number'] : FALSE;
      $countrycode = (isset($items[$delta])) ? $items[$delta]['country_codes'] : FALSE;
      $cc = cck_phone_countrycodes();
      $full_number = '';
      if ($countrycode && isset($cc[$countrycode])) {
        $full_number = substr($cc[$countrycode]['code'], 1) . $number;
      }
      
      $element['full_number'] = array(
        '#type' => 'textfield',
        '#title' => t(check_plain($instance['label'])),
        '#description' => t(check_plain($instance['description'])),
        '#default_value' => '+' . $full_number,
        '#required' => $instance['required'],
        '#attributes' => array('class' => array('simple-phone-full-number')),
        '#element_validate' => array('_simple_phonenumber_validate'),
      );

      $element['country_codes'] = array(
        '#type' => 'hidden',
        '#value' => $countrycode,
        '#element_validate' => array('_simple_phonenumber_element_validate'),
      );
      
      $element['number'] = array(
        '#type' => 'hidden',
        '#value' => $number,
        '#element_validate' => array('_simple_phonenumber_element_validate'),
      );
      
      break;
  }
  return $element;
}


function _simple_phonenumber_element_validate(&$element, &$form_state) {
  $pdelta = count($element['#parents']) - 4;
  $field_name = $element['#parents'][$pdelta];
  $language = $element['#parents'][$pdelta + 1];
  $delta = $element['#parents'][$pdelta + 2];
  $element_name = $element['#parents'][$pdelta + 3];
  if (isset($form_state['values'][$field_name])) {
    $element_value = $form_state['values'][$field_name][$language][$delta][$element_name];
    $element['#value'] = $element_value;

    form_set_value($element, $element_value, $form_state);
  }
}

/**
 * Validate function for Simple Phone Number widget
 *
 */
function _simple_phonenumber_validate($element, &$form_state) {
  $pdelta = count($element['#parents']) - 4;
  $field_name = $element['#parents'][$pdelta];
  $language = $element['#parents'][$pdelta + 1];
  $delta = $element['#parents'][$pdelta + 2];
  
  //Prepare element for validation
  if ($pdelta) {
    $element['#field_parents'][0] = $element['#parents'][$pdelta - 1];
  } else {
    $element['#field_parents'][0] = FALSE;
  }
  $element['#field_name'] = $field_name;
  $element['#language'] = $language;
  $element['#delta'] = $delta;
  
  $countrycode = '';
  $element['#value'] = cck_phone_clean_number($element['#value']);
  $number = $element['#value'];
  
  if (empty($element['#value'])) {
    $form_state['input'][$field_name][$language][$delta]['country_codes'] = FALSE;
    $form_state['values'][$field_name][$language][$delta]['country_codes'] = FALSE;
    $form_state['input'][$field_name][$language][$delta]['number'] = FALSE;
    $form_state['values'][$field_name][$language][$delta]['number'] = FALSE;
    form_set_value($element, FALSE, $form_state);
  }
  else {
    $country = _get_contry_by_phone_code($element['#value']);
    if ($country) {
      $countrycode = array_pop(array_keys($country));
      $tmp = array_pop($country);
      $number = substr($element['#value'], strlen($tmp['code']) - 1);
      // Set number for validate
      $number = empty($number) ? $element['#value'] : $number;
      
      $form_state['input'][$field_name][$language][$delta]['country_codes'] = $countrycode;
      $form_state['values'][$field_name][$language][$delta]['country_codes'] = $countrycode;
      $form_state['input'][$field_name][$language][$delta]['number'] = $number;
      $form_state['values'][$field_name][$language][$delta]['number'] = $number;
    }
  }
  
  if ($element['#required'] && empty($element['#value'])) {
    form_error($element, t('!name field is required.', array('!name' => $element['#title'])));
  }

  $element['#value'] = array(
    'country_codes' => $countrycode,
    'number' => $number,
  );
  
  cck_phone_phone_number_validate($element, $form_state);
}

/**
 * Get country by phone number
 *
 * @param $number Phone number without leading '+'
 *
 * @return
 *   If an invalid $cc is provided, FALSE will be returned.
 *   If the country code is valid the country code for
 *   that country will be returned.
 */
function _get_contry_by_phone_code($number) {
  foreach (cck_phone_countrycodes() as $cc => $value) {
    if (strpos((string)$number, ltrim((string)$value['code'], '+')) === 0) {
      return array($cc => $value);
    }
  }
  return FALSE;
}

