<?php

require_once('geofield.widgets.inc');
require_once('geofield.formatters.inc');
require_once('geofield.feeds.inc');

define('GEOPHP_PATH', 'sites/all/libraries/geoPHP/geoPHP.inc');

/**
 * Implements hook_field_info().
 */
function geofield_field_info() {
  return array(
    'geofield' => array(
      'label' => 'Geofield',
      'description' => t('This field stores geo information.'),
      'default_widget' => 'text_textfield',
      'default_formatter' => 'default',
    ),
  );
}

/**
 * Implements hook_field_presave().
 * PDO throws an error when attempting to insert an empty string into a float
 * field. Go through all values and convert empty strings to NULL.
 */
function geofield_field_presave($entity_type, $entity, $field, $instance, $langcode, &$items) {
  if ($field['type'] === 'geofield') {
    foreach ($items as $delta => $item) {
      if (!empty($item)) {
        foreach ($item as $k => $v) {
          if ($v === '') {
            $items[$delta][$k] = NULL;
          }
        }
      }
    }
  }
}

/**
 * Implements of hook_content_is_empty().
 * 
 * TODO: lat lon are optional, so this is broken.
 */
function geofield_field_is_empty($item, $field) {
  return (empty($item['wkt']));
}

/**
 * Implementation of hook_view_api().
 */
function geofield_views_api() {
  return array(
    'api' => '3.0-alpha1',
    'path' => drupal_get_path('module', 'geofield') . '/views', 
  );
}

/**
 * Implements hook_ctools_plugin_type
 */
function geofield_ctools_plugin_type() {
  return array(
    'behaviors' => array(
      'use hooks' => TRUE,
    )
  );
}

/**
 * Implements hook_ctools_plugin_api().
 */
function geofield_ctools_plugin_api($module, $api) {
  return array('version' => 1);
}

/**
 * Implements hook_openlayers_behaviors().
 */
function geofield_openlayers_behaviors() {
  return array(
    'openlayers_behavior_geofield' => array(
      'title' => t('Geofield'),
      'description' => t('Fuels the geofield map-input form.'),
      'type' => 'layer',
      'path' => drupal_get_path('module', 'geofield') .'/includes/behaviors',
      'file' => 'openlayers_behavior_geofield.inc',
      'behavior' => array(
        'class' => 'openlayers_behavior_geofield',
        'parent' => 'openlayers_behavior',
      ),
    ),
  );
}

/**
 * Implementation of hook_openlayers_presets().
 */
function geofield_openlayers_presets() {
  // Create full preset array
  $default = new stdClass();
  $default->api_version = 1;
  $default->name = 'geofield_map';
  $default->title = t('Geofield Map');
  $default->description = t('A Map Used for Geofield Input');
  $default->data = array(
    'projection' => '900913',
    'width' => '600px',
    'default_layer' => 'osm_mapnik',
    'height' => '400px',
    'center' => array(
      'initial' => array(
        'centerpoint' => '0,0',
        'zoom' => '2'
      )
    ),
    'options' => array(
      'maxExtent' => openlayers_get_extent('900913'),
    ),
    'behaviors' => array(
      'openlayers_behavior_panzoombar' => array(),
      'openlayers_behavior_attribution' => array(),
      'openlayers_behavior_geofield' => array(),
      'openlayers_behavior_keyboarddefaults' => array()
    ),
    'layers' => array(
      'osm_mapnik',
    )
  );
  return array('geofield_map' => $default);
}

/**
* Implementation of hook_requirements().
*/
function geofield_requirements($phase) {
  $requirements = array();
  
  $geophp = geofield_load_geophp();
  
  // Report postGIS status
  if ($geophp) {
    $requirements['geofield_geophp'] = array(
      'title' => t('GeoPHP Library Installed'),
      'severity' => REQUIREMENT_OK,
      'value' => t('GeoPHP library installed at %path', array('%path' => $geophp)),
    );
  }
  else {
    $requirements['geofield_geophp'] = array(
      'title' => t('GeoPHP Library Not Found'),
      'severity' => REQUIREMENT_ERROR,
      'value' => t('GeoPHP library was not found. This could lead to problems when working with geofield. Please download from %link and place in your libraries diectory as per the geofield installation instructions.',array('%link' => l('https://github.com/phayes/geophp','https://github.com/phayes/geophp'))),
    );
  }
  return $requirements;
}

/**
* Load the geoPHP library
*/
function geofield_load_geophp() {
  if (file_exists(GEOPHP_PATH)) {
    if (include_once(GEOPHP_PATH)) {
      return GEOPHP_PATH;
    }
  }
  return FALSE;
}