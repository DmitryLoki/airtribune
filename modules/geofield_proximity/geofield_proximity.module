<?php

/**
 * Implmentation of hook_views_api();
 */
function geofield_proximity_views_api() {
  return array(
    'api' => '3.0',
    'path' => drupal_get_path('module', 'geofield_proximity') . '/views',
  );
}

/**
 * Implmentation of hook_theme();
 */
function geofield_proximity_theme($existing, $type, $theme, $path) {
  return array(
    'geofield_proximity' => array(
      'render element' => 'element',
    ),
  );
}

/**
 * Theme wrapper for form item
 */
function theme_geofield_proximity($vars) {
  $element = $vars['element'];

  $attributes = !empty($element['#wrapper_attributes']) ? $element['#wrapper_attributes'] : array('class' => array());
  $attributes['class'][] = 'geofield-proximity-field-wrapper';
  $attributes['class'][] = 'clearfix';

  $wrapper_attributes = array();
  $wrapper_attributes['class'][] = 'clearfix';

  if (isset($element['#children']))
    $element['#children'] = '<div id="' . $element['#id'] . '" ' . drupal_attributes($wrapper_attributes) . '>' . $element['#children'] . '</div>';

  $output = '<div ' . drupal_attributes($attributes) . '>' . theme('form_element', $element) . '</div>';

  return $output;
}

/**
 * Implmentation of hook_element_info();
 */
function geofield_proximity_element_info() {
  $type['geofield_proximity_search'] = array(
    '#input'            => FALSE,
    '#tree'             => TRUE,
    '#theme_wrappers'   => array('geofield_proximity'),
    '#process'          => array('geofield_proximity_element_process'),
    '#geocoder_service' => 'google',
    '#distance_default' => 100,
    '#unit_default'     => 3444,
  );

  return $type;
}

/**
 * Process function for the form element
 */
function geofield_proximity_element_process($element, &$form_state, $form) {
  $element['#attributes'] = array('class' => array('clearfix'));

  //Create the textfield for distance
  $element['distance'] = array(
    '#type'             => 'textfield',
    '#title'            => t('Distance'),
    '#default_value'    => $element['#distance_default'],
    '#size'             => 3,
    '#title_display'    => 'invisible',
    '#element_validate' => array('element_validate_integer_positive'),
  );

  //Create dropdown for units
  $element['unit'] = array(
    '#type'          => 'select',
    '#options'       => geofield_proximity_radius_options(),
    '#title'         => t('Unit'),
    '#default_value' => $element['#unit_default'],
    '#title_display' => 'invisible',
  );

  //Create textfield for geocoded input
  $element['origin'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Origin'),
    '#size'          => 15,
    '#prefix'        => '<span class="geofield-proximity-origin-from">from</span>',
    '#title_display' => 'invisible',
    '#required'      => !empty($element['#required']) ? $element['#required'] : FALSE,
    '#default_value' => !empty($element['#default_value']) ? $element['#default_value'] : FALSE,
  );

  if (isset($element['#element_validate'])) {
    array_push($element['#element_validate'], 'goefield_proximity_search_validate');
  }
  else {
    $element['#element_validate'] = array('geofield_proximity_search_validate');
  }

  return $element;
}

/**
 * Validate the geofield proximity search form item
 */
function geofield_proximity_search_validate($element, &$form_state) {
  //If the origin is set, ensure the distance is set as well
  if ($element['origin']['#value'] != '' && empty($element['distance']['#value']))
    form_set_error(implode('][', $element['#array_parents']) . '][distance', t('@title must be set when @origin is specified.', array('@title' => $element['distance']['#title'], '@origin' => $element['origin']['#title'])));
}

/**
 * Returns options for radius of the Earth.
 */
function geofield_proximity_radius_options() {
  return array(
    '6371'     => t('Kilometers'),
    '6371000'  => t('Meters'),
    '3959'     => t('Miles'),
    '6975175'  => t('Yards'),
    '20925525' => t('Feet'),
    '3444'     => t('Nautical Miles'),
  );
}
