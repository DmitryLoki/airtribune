<?php

/**
 * @file
 * Tests for geofield.module.
 */

class GeoFieldTestCase extends FieldTestCase {

  public static function getInfo() {
    return array(
      'name'  => 'Geofield',
      'description'  => "Test the creation of geofields.",
      'group' => 'Field types'
    );
  }

  function setUp() {
    parent::setUp(array('geofield', 'field_test'));

    $this->admin_user = $this->drupalCreateUser(array('administer filters'));
    $this->web_user = $this->drupalCreateUser(array('access field_test content', 'administer field_test content', 'administer modules'));
    $this->drupalLogin($this->web_user);
  }

  // Test fields.

  /**
   * Test widgets.
   */
  function testGeofieldFieldAPI() {
    // Test lat/lon widget
    $this->_testGeoFieldAPISetup('geofield_latlon');
    // Display creation form.
    $langcode = LANGUAGE_NONE;
    $this->drupalGet('test-entity/add/test-bundle');
    $this->assertFieldByName("{$this->field_name}[$langcode][0][widget][lat]", '', t('Widget [lat] is displayed'));
    $this->assertFieldByName("{$this->field_name}[$langcode][0][widget][lon]", '', t('Widget [lon] is displayed'));
    $this->assertNoFieldByName("{$this->field_name}[$langcode][0][widget]", '', t("Widget [widget] isn't displayed with latlon widget"));

    // Submit with some value.
    /*$value = $this->randomName();
    $edit = array(
      "{$this->field_name}[$langcode][0][value]" => $value,
    );*/
    //$this->_testGeofieldWidgets('geofield_latlon');

    $this->_testGeoFieldAPISetup('geofield_wkt');
    // Display creation form.
    $langcode = LANGUAGE_NONE;
    $this->drupalGet('test-entity/add/test-bundle');
    $this->assertNoFieldByName("{$this->field_name}[$langcode][0][widget][lat]", '', t("Widget [lat] isn't displayed"));
    $this->assertNoFieldByName("{$this->field_name}[$langcode][0][widget][lon]", '', t("Widget [lon] isn't displayed"));
    $this->assertFieldByName("{$this->field_name}[$langcode][0][widget]", '', t("Widget [widget] is displayed"));
  }

  /**
   * Helper function for testGeofieldWidgets().
   */
  function _testGeoFieldAPISetup($widget_type) {
    // Setup a field and instance
    $entity_type = 'test_entity';
    $this->field_name = drupal_strtolower($this->randomName());
    $this->field = array('field_name' => $this->field_name, 'type' => 'geofield');
    field_create_field($this->field);
    $this->instance = array(
      'field_name' => $this->field_name,
      'entity_type' => 'test_entity',
      'bundle' => 'test_bundle',
      'label' => $this->randomName() . '_label',
      'settings' => array(
      ),
      'widget' => array(
        'type' => $widget_type,
      ),
      'display' => array(
        'full' => array(
          'type' => 'geofield_wkt',
        ),
      ),
    );
    field_create_instance($this->instance);
  }
}

class GeoFieldElementTestCase extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Geofield FormAPI Elements',
      'description' => "Test Geofield FormAPI elements.",
      'group' => 'Form API',
    );
  }

  function setUp() {
    parent::setUp(array('geofield', 'geofield_test', 'geocoder'));

    $this->web_user = $this->drupalCreateUser(array('access content'));
    $this->drupalLogin($this->web_user);
  }

  function testGeofieldLatLonElement() {
    // Test form element rendering
    $this->drupalGet('geofield-formapi-element');
    $this->assertFieldById('edit-geofield-latlon-simple-lat', '', 'Latitude element for simple geofield exists.');
    $this->assertFieldById('edit-geofield-latlon-simple-lon', '', 'Longitude element for simple geofield exists.');

    $this->assertFieldById('edit-geofield-latlon-verbose-lat', 41, 'Latitude element for verbose geofield exists.');
    $this->assertFieldById('edit-geofield-latlon-verbose-lon', -86, 'Longitude element for verbose geofield exists.');

    // Test form element submission.
    $edit = array();
    $edit['geofield_latlon_simple[lat]'] = 41;
    $edit['geofield_latlon_simple[lon]'] = -86;
    $edit['geofield_latlon_verbose[lat]'] = 25;
    $edit['geofield_latlon_verbose[lon]'] = 54;
    $this->drupalPost('geofield-formapi-element', $edit, t('Save'));
    $this->assertText('Simple - Lat: 41 Lon: -86', "Simple Geofield saved data as expected");
    $this->assertText('Verbose - Lat: 25 Lon: 54', "Verbose Geofield saved data as expected");
  }
}
